package com.company.Interface;

import com.company.Product.BasketDAO;
import com.company.Product.ProductDAO;
import com.company.ServiceLayer.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Map;
import java.util.Vector;

public class Order_Page extends JFrame {
    private JButton addButton;
    private JButton checkItOutButton;
    public JPanel TopPanel;
    public JPanel BottomPanel;
    private JTextField txtnum;
    private JTextField txtid;
    private JLabel label1;
    private JTable table1;
    private JButton addItButton;

    public Order_Page(Service service, CheckService checkService) {
        Map<Integer, ProductDAO> map = service.output();
        Map<Integer, BasketDAO> basketMap = checkService.getMap();
        setTitle("Place Your Order");
        setSize(800, 600);
        DefaultTableModel tableModel = new DefaultTableModel();
        table1.setFillsViewportHeight(true);
        table1.setRowSelectionAllowed(true);
        table1.setRowHeight(24);
        table1.setModel(tableModel);
        String[] head = {"ID", "Name", "Number"};
        tableModel.setColumnIdentifiers(head);
        addItButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String id = txtid.getText();
                String num = txtnum.getText();
                int vid = -1;
                int vnum = -1;
                try {
                    vid = Integer.parseInt(id);
                    vnum = Integer.parseInt(num);
                } catch (Exception error) {
                    JOptionPane.showMessageDialog(TopPanel, "Please input number");
                }
                boolean check = false;
                for (int key : map.keySet()) {
                    if (key == vid) {
                        BasketDAO temp = new BasketDAO();
                        temp.setId(key);
                        temp.setName(map.get(key).getName());
                        temp.setPrice(map.get(key).getPrice());
                        temp.setDiscountThreshold(map.get(key).getDiscountThreshold());
                        temp.setDiscountPercent(map.get(key).getDiscountPercent());
                        temp.setBundle(map.get(key).getBundle());
                        check = true;
                        basketMap.put(key, temp);
                        break;
                    }
                }
                if (!check) {
                    JOptionPane.showMessageDialog(TopPanel, "Sorry, we did not find the product with this ID");
                } else {
                    basketMap.get(vid).setNumber(vnum);
                    tableModel.setRowCount(0);
                    for (int key : basketMap.keySet()) {
                        if (basketMap.get(key).getNumber() <= 0) {
                            basketMap.remove(key);
                            continue;
                        }
                        Vector<Object> temp = new Vector();
                        temp.add(basketMap.get(key).getId());
                        temp.add(basketMap.get(key).getName());
                        temp.add(basketMap.get(key).getNumber());
                        tableModel.addRow(temp);
                    }

                }
            }
        });
        checkItOutButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String result = checkService.check(basketMap);
                JOptionPane.showMessageDialog(TopPanel, result);

            }
        });
        setContentPane(TopPanel);
        setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        TopPanel = new JPanel();
        TopPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(7, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(TopPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Product ID");
        TopPanel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Number");
        TopPanel.add(label3, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(49, 119), null, 0, false));
        txtnum = new JTextField();
        TopPanel.add(txtnum, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(358, 27), null, 0, false));
        txtid = new JTextField();
        TopPanel.add(txtid, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(358, 27), null, 0, false));
        label1 = new JLabel();
        label1.setText("Place your Order");
        TopPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(358, 16), null, 0, false));
        addItButton = new JButton();
        addItButton.setText("Add it");
        TopPanel.add(addItButton, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(358, 27), null, 0, false));
        table1 = new JTable();
        TopPanel.add(table1, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(358, 50), null, 0, false));
        checkItOutButton = new JButton();
        checkItOutButton.setText("Check It Out");
        TopPanel.add(checkItOutButton, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(358, 27), null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Total");
        TopPanel.add(label4, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(72, 16), null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("Label");
        TopPanel.add(label5, new com.intellij.uiDesigner.core.GridConstraints(5, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(72, 16), null, 0, false));
    }
}
